# Workflow 이름
name: Build and Push Frontend & Backend Images

# Github main 브랜치의 VERSION 파일이 수정되었을 때 워크플로우 실행
on:
  push:
    branches: [ main ]
    paths:
      - 'VERSION'

# 워크플로우가 Git에 다시 Push할 수 있도록 권한 부여
permissions:
  contents: write

# 환경변수 정의
env:
  ACR_NAME: tetrisgameacr
  BACKEND_IMAGE_REPO: tetris-backend
  FRONTEND_IMAGE_REPO: tetris-frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          # Git Push 하기 위한 Personal Access Token
          token: ${{ secrets.PAT }}

      # 2. 이미지 태그 설정 (공용 VERSION 파일 사용)
      - name: Set image tag
        id: set-image-tag
        run: |
          IMAGE_TAG=$(cat VERSION)
          if [ -z "$IMAGE_TAG" ]; then
            echo "Error: VERSION file is empty or does not exist."
            exit 1
          fi
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT
      
      # 3. ACR에 로그인
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

      # 4-1. 백엔드 Docker 이미지 빌드 및 푸시
      - name: Build and push backend image
        run: |
          docker build ./src/back-end \
            -f ./src/back-end/Dockerfile \
            -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.BACKEND_IMAGE_REPO }}:${{ steps.set-image-tag.outputs.IMAGE_TAG }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.BACKEND_IMAGE_REPO }}:${{ steps.set-image-tag.outputs.IMAGE_TAG }}

      # 4-2. 프론트엔드 Docker 이미지 빌드 및 푸시
      - name: Build and push frontend image
        run: |
          docker build ./src/front-end \
            -f ./src/front-end/Dockerfile \
            -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.FRONTEND_IMAGE_REPO }}:${{ steps.set-image-tag.outputs.IMAGE_TAG }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.FRONTEND_IMAGE_REPO }}:${{ steps.set-image-tag.outputs.IMAGE_TAG }}

      # 5. Git 설정 및 YAML 파일들 업데이트
      - name: Update Kubernetes manifests
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # 백엔드 Deployment 업데이트
          sed -i "s|image:.*tetris-backend.*|image: ${{ env.ACR_NAME }}.azurecr.io/${{ env.BACKEND_IMAGE_REPO }}:${{ steps.set-image-tag.outputs.IMAGE_TAG }}|g" k8s-manifests/backend-deployment.yaml
          
          # 프론트엔드 Deployment 업데이트
          sed -i "s|image:.*tetris-frontend.*|image: ${{ env.ACR_NAME }}.azurecr.io/${{ env.FRONTEND_IMAGE_REPO }}:${{ steps.set-image-tag.outputs.IMAGE_TAG }}|g" k8s-manifests/frontend-deployment.yaml

      # 6. 변경된 YAML 파일들을 main 브랜치에 다시 Push
      - name: Commit and push manifest changes
        run: |
          git diff --quiet || (git commit -am "chore(ci): Update image tags to ${{ steps.set-image-tag.outputs.IMAGE_TAG }}" && git push)